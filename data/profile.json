{
  "profile": {
    "name": "Mustaq Sohail Shaik",
    "title": "Full Stack Developer | Generative AI Engineer",
    "organization": "1+ Year Experience | Washington, DC",
    "profileImage": "assets/PIC.jpg",
    "cvPath": "assets/Mustaq_Sohail_Resume.pdf",
    "metrics": [
      "1+ Year Full Stack",
      "RAG Systems Expert",
      "30% Student Success Boost",
      "AI-Driven Applications"
    ]
  },

  "bio": {
    "introduction": "<span class=\"highlight\">Full Stack Developer with 1+ years of experience</span> building scalable, cloud-based, and AI-powered web applications. Skilled in <span class=\"highlight\">React.js, Next.js, Python, Node.js, and FastAPI</span> with expertise in integrating LLM and generative AI technologies, <span class=\"highlight\">Retrieval-Augmented Generation (RAG)</span>, and secure API workflows. Proven track record of delivering responsive, user-focused solutions using <span class=\"highlight\">Supabase, PostgreSQL, and AWS</span>, while ensuring performance optimization and compliance with security best practices.",
    "background": "Expertise in <span class=\"highlight\">Full-Stack Web Development</span> including React.js, Next.js, TypeScript for modern frontend applications, and Node.js, Python, Flask, FastAPI for robust backend systems. Advanced experience with <span class=\"highlight\">Generative AI & LLMs</span> including OpenAI, Claude, Gemini, Ollama, Hugging Face, RAG (Retrieval-Augmented Generation), and advanced prompt engineering. Proficient in <span class=\"highlight\">Cloud & DevOps</span> using AWS, Azure, Vercel, Render, Docker, GitHub Actions, and CI/CD pipelines. Strong database expertise with PostgreSQL, Supabase, Firebase, and vector databases for AI applications.",
    "researchFocus": "Specialized in <span class=\"highlight\">AI-enhanced full-stack applications</span> with demonstrated success in integrating LLM APIs, architecting RAG pipelines, and implementing context-aware workflows. Expert in <span class=\"highlight\">performance optimization</span> including API usage monitoring, caching strategies, and streaming for low-latency AI responses. Proven ability to apply <span class=\"highlight\">secure deployment practices</span> with RBAC (Role-Based Access Control), data privacy compliance, and governance policies. Experienced in mentoring and teaching, having supported <span class=\"highlight\">40+ students with 30% improvement in success rates</span> through hands-on web development instruction and personalized guidance."
  },

  "contact": {
    "email": "reachtomustaqsohail@gmail.com",
    "phone": "(928) 255-7208",
    "location": "Washington, DC",
    "githubUsername": "DarMonarch",
    "linkedin": null,
    "github": null,
    "googleScholar": null,
    "twitter": null,
    "website": null,
    "trailhead": null
  },

  "navigation": [
    {"label": "About", "href": "#banner"},
    {"label": "Experience", "href": "#publications"},
    {"label": "Projects", "href": "#projects"},
    {"label": "Skills", "href": "#skills"},
    {"label": "Education", "href": "#education"},
    {"label": "Contact", "href": "mailto:reachtomustaqsohail@gmail.com"}
  ],

  "publications": [
    {
      "id": "progress-solutions",
      "title": "Jr. Full Stack Developer Intern",
      "authors": "Progress Solutions Inc. | Plano, TX",
      "venue": "August 2025 – Present",
      "description": "<div class='impact-metrics'><span class='metric'>AI-Driven Apps</span><span class='metric'>RAG Pipelines</span><span class='metric'>LLM Integration</span><span class='metric'>Cloud Deployment</span></div><br/><strong>Key Achievements:</strong><br/>• <strong>Developed full-stack AI-driven applications</strong> integrating LLM and generative AI capabilities using React, Next.js, Python, Node.js, and FastAPI for real-world use cases, <span class='highlight'>delivering production-ready solutions</span> with modern web technologies<br/>• <strong>Built and maintained scalable web applications</strong> with responsive design, optimized performance, and seamless user experiences across desktop and mobile platforms<br/>• <strong>Integrated LLM APIs</strong> including OpenAI, Anthropic Claude, and Hugging Face with advanced prompt engineering and context-aware workflows, <span class='highlight'>enabling intelligent AI features</span> in production applications<br/>• <strong>Architected and optimized Retrieval-Augmented Generation (RAG) pipelines</strong> using vector databases such as Pinecone, Weaviate, and Supabase, <span class='highlight'>improving context accuracy and response relevance</span> for AI-powered features<br/>• <strong>Implemented performance optimization strategies</strong> including API usage monitoring, intelligent caching, and streaming responses, <span class='highlight'>achieving low-latency AI interactions</span> and enhanced user experience<br/>• <strong>Applied secure and ethical AI deployment practices</strong> by enforcing Role-Based Access Control (RBAC), data privacy compliance, and governance policies across all applications<br/>• <strong>Collaborated with cross-functional teams</strong> in an Agile environment to design, test, and deploy AI-enhanced features, ensuring quality and meeting project deadlines",
      "image": "images/progress-solutions-logo.png",
      "links": {
        "paper": null,
        "github": null,
        "status": null
      }
    },
    {
      "id": "nau-teaching",
      "title": "Teaching Assistant – Web Technologies",
      "authors": "Northern Arizona University | Flagstaff, AZ",
      "venue": "January 2025 – May 2025",
      "description": "<div class='impact-metrics'><span class='metric'>40+ Students Mentored</span><span class='metric'>30% Success Improvement</span><span class='metric'>Curriculum Modernization</span><span class='metric'>React Integration</span></div><br/><strong>Key Achievements:</strong><br/>• <strong>Mentored 40+ students</strong> in developing responsive, accessible web applications using HTML, CSS, JavaScript, and modern best practices, <span class='highlight'>significantly improving their technical skills and confidence</span><br/>• <strong>Facilitated weekly live sessions and conducted 1-on-1 troubleshooting</strong> to clarify frontend concepts (UI/UX, DOM manipulation) and backend principles (API integration, server logic), <span class='highlight'>resulting in a 30% improvement in student success rates</span><br/>• <strong>Designed and delivered hands-on technical examples and lab exercises</strong> covering DOM manipulation, API requests, browser compatibility, and responsive design principles, making complex concepts accessible to beginners<br/>• <strong>Reviewed and graded 100+ assignments and capstone projects</strong>, providing actionable, detailed feedback that helped students understand mistakes and improve their coding practices<br/>• <strong>Collaborated with faculty to update and modernize the curriculum</strong>, adding React fundamentals, Git/GitHub version control, and industry-standard workflows, <span class='highlight'>bridging the gap between academic learning and industry expectations</span><br/>• <strong>Supported students in debugging, optimizing, and deploying projects</strong>, enhancing their problem-solving skills and preparing them for real-world development challenges",
      "image": "images/northern-arizona-university-logo.png",
      "links": {
        "paper": null,
        "github": null,
        "status": null
      }
    },
    {
      "id": "smart-internz",
      "title": "Salesforce Developer Intern",
      "authors": "Smart Internz | Remote",
      "venue": "August 2022 – October 2022",
      "description": "<div class='impact-metrics'><span class='metric'>Apex Development</span><span class='metric'>Lightning Web Components</span><span class='metric'>API Integration</span><span class='metric'>Business Automation</span></div><br/><strong>Key Achievements:</strong><br/>• <strong>Developed business automation workflows</strong> using Salesforce Flows and Validation Rules to streamline business processes and improve data quality across the CRM platform<br/>• <strong>Wrote Apex triggers and comprehensive test classes</strong> to enforce custom business logic within Salesforce CRM, <span class='highlight'>ensuring code coverage and reliability</span> for production deployments<br/>• <strong>Built and deployed Lightning Web Components (LWC)</strong> to extend CRM UI functionality, creating modern, responsive user interfaces that enhanced user experience and productivity<br/>• <strong>Integrated third-party APIs into Salesforce</strong> using REST API endpoints, enabling seamless data exchange and extending CRM capabilities with external services<br/>• <strong>Collaborated with business stakeholders</strong> to understand requirements and translate them into technical solutions, demonstrating strong communication and problem-solving skills<br/>• <strong>Gained hands-on experience with enterprise CRM development</strong>, understanding the full development lifecycle from requirements gathering to testing and deployment",
      "image": "images/smart-internz-logo.svg",
      "links": {
        "paper": null,
        "github": null,
        "status": null
      }
    }
  ],

  "skills": {
    "frontendDevelopment": [
      "HTML5 (Semantic Markup and Accessibility)",
      "CSS3 (Flexbox, Grid, Animations, Transitions)",
      "JavaScript (ES6+, Async/Await, Promises)",
      "TypeScript (Type Safety and Modern JavaScript)",
      "React.js (Hooks, Context API, Component Architecture)",
      "Next.js (Server-Side Rendering, Static Generation)",
      "Responsive Web Design (Mobile-First Approach)",
      "Bootstrap (Rapid UI Development)",
      "Tailwind CSS (Utility-First CSS Framework)",
      "DOM Manipulation (Event Handling, Dynamic Content)",
      "Browser Compatibility and Cross-Browser Testing",
      "Web Accessibility (WCAG Standards, ARIA)",
      "Performance Optimization (Code Splitting, Lazy Loading)",
      "Progressive Web Apps (PWA)",
      "UI/UX Best Practices"
    ],
    "backendDevelopment": [
      "Node.js (Server-Side JavaScript)",
      "Express.js (RESTful API Development)",
      "Python (Backend Development and Scripting)",
      "Flask (Lightweight Python Web Framework)",
      "FastAPI (Modern Python API Framework)",
      "REST API Design and Development",
      "API Security (Authentication, Authorization)",
      "Middleware and Request Handling",
      "Error Handling and Logging",
      "Server-Side Validation",
      "Rate Limiting and Throttling",
      "Caching Strategies (Redis, In-Memory)",
      "Session Management",
      "Cookie Handling",
      "WebSocket Implementation (Real-Time Communication)"
    ],
    "databasesTechnologies": [
      "PostgreSQL (Relational Database)",
      "SQL (Complex Queries, Joins, Subqueries)",
      "Supabase (Backend-as-a-Service)",
      "Firebase (Real-Time Database, Authentication)",
      "Database Schema Design",
      "Data Modeling and Normalization",
      "Indexes and Query Optimization",
      "Transactions and ACID Properties",
      "Database Migrations",
      "Vector Databases (Pinecone, Weaviate)",
      "NoSQL Concepts",
      "Database Security and Access Control",
      "Backup and Recovery Strategies"
    ],
    "aiLLMTechnologies": [
      "OpenAI API (GPT-4, GPT-3.5, Embeddings)",
      "Anthropic Claude (Advanced Language Models)",
      "Google Gemini (Multimodal AI)",
      "Ollama (Local LLM Deployment)",
      "Hugging Face Transformers (Pre-trained Models)",
      "RAG (Retrieval-Augmented Generation)",
      "Prompt Engineering (Few-Shot, Chain-of-Thought)",
      "Context-Aware Workflows",
      "LLM API Integration",
      "Embedding Models and Vector Search",
      "Semantic Search Implementation",
      "Token Management and Optimization",
      "Streaming Responses",
      "LLM Fine-Tuning Concepts",
      "AI Model Selection and Evaluation"
    ],
    "cloudDevOps": [
      "AWS (EC2, S3, Lambda, RDS)",
      "Azure (App Service, Functions, Storage)",
      "Vercel (Frontend Deployment Platform)",
      "Render (Cloud Application Platform)",
      "Docker (Containerization)",
      "GitHub Actions (CI/CD Automation)",
      "Continuous Integration and Deployment",
      "Infrastructure as Code Concepts",
      "Environment Configuration Management",
      "Secrets Management",
      "Monitoring and Logging",
      "Auto-Scaling and Load Balancing",
      "Cloud Security Best Practices",
      "Serverless Architecture",
      "Deployment Strategies (Blue-Green, Canary)"
    ],
    "versionControlTools": [
      "Git (Version Control System)",
      "GitHub (Code Collaboration and Hosting)",
      "Git Branching Strategies (Feature, Release, Hotfix)",
      "Pull Requests and Code Review",
      "Git Workflows (GitFlow, GitHub Flow)",
      "Merge Conflict Resolution",
      "VS Code (Integrated Development Environment)",
      "VS Code Extensions and Customization",
      "Jupyter Notebook (Interactive Computing)",
      "Google Colab (Cloud-Based Notebooks)",
      "Debugging Tools and Techniques",
      "Chrome DevTools (Frontend Debugging)",
      "Postman (API Testing and Development)",
      "Command Line Interface (CLI) Proficiency"
    ],
    "securityBestPractices": [
      "Role-Based Access Control (RBAC)",
      "Authentication and Authorization",
      "Data Privacy and Compliance",
      "API Security (Rate Limiting, API Keys, OAuth)",
      "Input Validation and Sanitization",
      "SQL Injection Prevention",
      "Cross-Site Scripting (XSS) Prevention",
      "Cross-Site Request Forgery (CSRF) Protection",
      "Secure Password Storage (Hashing, Salting)",
      "HTTPS and SSL/TLS",
      "JWT (JSON Web Tokens)",
      "Session Security",
      "CORS (Cross-Origin Resource Sharing)",
      "Security Headers",
      "Governance Policies and Compliance"
    ],
    "testingQuality": [
      "Unit Testing (Jest, Pytest)",
      "Integration Testing",
      "End-to-End Testing",
      "Test-Driven Development (TDD)",
      "Debugging and Troubleshooting",
      "Code Quality and Linting (ESLint, Pylint)",
      "Performance Testing",
      "Browser Testing and Compatibility",
      "API Testing (Postman, Thunder Client)",
      "Error Tracking and Monitoring",
      "Code Review Best Practices"
    ],
    "salesforceDevelopment": [
      "Salesforce CRM (Customer Relationship Management)",
      "Apex (Salesforce Programming Language)",
      "Apex Triggers and Automation",
      "Apex Test Classes and Code Coverage",
      "Lightning Web Components (LWC)",
      "Salesforce Flows (Process Automation)",
      "Validation Rules (Data Quality)",
      "SOQL (Salesforce Object Query Language)",
      "SOSL (Salesforce Object Search Language)",
      "REST API Integration with Salesforce",
      "Salesforce Development Lifecycle",
      "Salesforce Best Practices"
    ],
    "webTechnologies": [
      "HTTP/HTTPS Protocols",
      "RESTful Architecture",
      "JSON (Data Interchange Format)",
      "AJAX (Asynchronous JavaScript)",
      "Fetch API and Axios",
      "CORS (Cross-Origin Resource Sharing)",
      "Web Storage (LocalStorage, SessionStorage)",
      "Cookies and Session Management",
      "Web Performance Optimization",
      "SEO (Search Engine Optimization) Basics",
      "Web Standards and W3C Compliance",
      "Browser Developer Tools"
    ],
    "agileDevelopment": [
      "Agile Methodologies",
      "Scrum Framework",
      "Sprint Planning and Execution",
      "Cross-Functional Team Collaboration",
      "Code Review and Pair Programming",
      "Technical Documentation",
      "Requirements Gathering",
      "User Story Creation",
      "Task Estimation and Planning",
      "Continuous Improvement",
      "Communication and Presentation Skills",
      "Problem-Solving and Analytical Thinking",
      "Time Management and Prioritization",
      "Mentoring and Teaching"
    ],
    "additionalSkills": [
      "SQLAlchemy (Python SQL Toolkit)",
      "ORM (Object-Relational Mapping)",
      "State Management (React Context, Redux concepts)",
      "Component Design Patterns",
      "Micro-Frontend Architecture concepts",
      "GraphQL Basics",
      "Server-Side Rendering (SSR)",
      "Static Site Generation (SSG)",
      "Incremental Static Regeneration (ISR)",
      "Environment Variables Management",
      "Configuration Management",
      "Logging and Monitoring Strategies",
      "Technical Writing and Documentation",
      "Markdown and Documentation Tools"
    ]
  },

  "projects": [
    {
      "id": "rag-chatbot-system",
      "title": "RAG-Enhanced AI Chatbot System",
      "year": "2025",
      "category": "genai",
      "shortDescription": "Context-aware AI chatbot with vector search using RAG pipeline, FastAPI backend, and streaming LLM responses.",
      "detailedDescription": "<div class='project-metrics'><span class='metric'>RAG Pipeline</span><span class='metric'>Vector Search</span><span class='metric'>Streaming Responses</span><span class='metric'>Production Ready</span></div><br/>Architected and developed a comprehensive RAG (Retrieval-Augmented Generation) chatbot system combining vector search with large language models for context-aware responses. Built robust backend using FastAPI with streaming endpoints for low-latency AI interactions. Integrated multiple vector databases (Pinecone, Weaviate) for semantic search and context retrieval. Implemented advanced prompt engineering techniques including few-shot learning and chain-of-thought reasoning. Utilized Supabase for PostgreSQL database management, storing conversation history and user preferences. Created efficient embedding pipeline using OpenAI and Hugging Face models for document indexing. Deployed with Docker containers and implemented caching strategies for improved performance. Results: Achieved sub-second response times, high context relevance, and scalable architecture supporting multiple concurrent users.",
      "media": {
        "type": "image",
        "src": "images/rag-chatbot-system.png",
        "poster": null
      },
      "techStack": [
        "Python",
        "FastAPI",
        "OpenAI API",
        "Claude API",
        "Pinecone",
        "Weaviate",
        "Supabase",
        "PostgreSQL",
        "Docker",
        "Vector Embeddings",
        "RAG",
        "Streaming APIs"
      ],
      "metrics": [
        {"value": "Sub-second", "label": "Response Time"},
        {"value": "RAG", "label": "Architecture"},
        {"value": "High", "label": "Context Accuracy"}
      ],
      "links": {
        "website": null,
        "github": null,
        "details": "#"
      },
      "isExpandable": true
    },
    {
      "id": "fullstack-llm-app",
      "title": "AI-Powered Full Stack Application",
      "year": "2025",
      "category": "genai",
      "shortDescription": "Modern full-stack application with LLM integration, React/Next.js frontend, and secure API workflows with RBAC.",
      "detailedDescription": "<div class='project-metrics'><span class='metric'>Next.js Frontend</span><span class='metric'>LLM Integration</span><span class='metric'>RBAC Security</span><span class='metric'>Cloud Deployed</span></div><br/>Developed production-ready full-stack web application integrating multiple LLM APIs (OpenAI, Claude, Gemini) with modern frontend technologies. Built responsive, accessible UI using React and Next.js with TypeScript for type safety. Implemented server-side rendering (SSR) and static site generation (SSG) for optimal performance and SEO. Created secure backend using Node.js and FastAPI with RESTful API architecture. Integrated Role-Based Access Control (RBAC) ensuring data privacy and security compliance. Implemented advanced prompt engineering for context-aware AI features and intelligent user interactions. Utilized Supabase for real-time database synchronization and authentication. Deployed to AWS and Vercel with CI/CD pipelines using GitHub Actions. Added comprehensive monitoring, error tracking, and performance optimization. Results: Scalable architecture, secure authentication, fast loading times, and seamless AI-powered user experience.",
      "media": {
        "type": "image",
        "src": "images/neural-network-optimization.png",
        "poster": null
      },
      "techStack": [
        "React.js",
        "Next.js",
        "TypeScript",
        "Node.js",
        "FastAPI",
        "OpenAI",
        "Claude",
        "Supabase",
        "AWS",
        "Vercel",
        "GitHub Actions",
        "RBAC",
        "Docker"
      ],
      "metrics": [
        {"value": "Production", "label": "Grade"},
        {"value": "RBAC", "label": "Security"},
        {"value": "Multi-LLM", "label": "Integration"}
      ],
      "links": {
        "website": null,
        "github": null,
        "details": "#"
      },
      "isExpandable": true
    },
    {
      "id": "interactive-learning-platform",
      "title": "Interactive Learning Platform",
      "year": "2025",
      "category": "fullstack",
      "shortDescription": "Responsive web application for student learning with real-time features, API integration, and modern UI/UX.",
      "detailedDescription": "<div class='project-metrics'><span class='metric'>40+ Students</span><span class='metric'>Real-Time Features</span><span class='metric'>Responsive Design</span><span class='metric'>React Application</span></div><br/>Designed and developed interactive learning platform supporting 40+ students with hands-on web development exercises and real-time collaboration features. Built with React.js for dynamic component-based architecture and state management. Implemented responsive design using CSS3 Flexbox, Grid, and mobile-first approach ensuring seamless experience across devices. Created comprehensive DOM manipulation exercises and API integration tutorials. Developed backend REST APIs using Express.js and Python Flask for data management and user authentication. Integrated real-time features using WebSockets for live coding sessions and instant feedback. Implemented progress tracking system storing user data in PostgreSQL database. Added accessibility features following WCAG standards with ARIA labels and keyboard navigation. Deployed on cloud platforms with automated CI/CD pipelines. Results: Enhanced student engagement, improved learning outcomes by 30%, positive feedback on user experience and functionality.",
      "media": {
        "type": "image",
        "src": "images/automated-proposal-tool.svg",
        "poster": null
      },
      "techStack": [
        "React.js",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Node.js",
        "Express.js",
        "PostgreSQL",
        "REST APIs",
        "WebSockets",
        "Responsive Design",
        "Git/GitHub"
      ],
      "metrics": [
        {"value": "40+", "label": "Active Users"},
        {"value": "30%", "label": "Success Improvement"},
        {"value": "Mobile", "label": "Responsive"}
      ],
      "links": {
        "website": null,
        "github": null,
        "details": "#"
      },
      "isExpandable": true
    },
    {
      "id": "cloud-deployed-webapp",
      "title": "Cloud-Deployed Web Application",
      "year": "2025",
      "category": "fullstack",
      "shortDescription": "Production-grade web app with AWS deployment, Docker containerization, and automated CI/CD pipeline.",
      "detailedDescription": "<div class='project-metrics'><span class='metric'>AWS Deployment</span><span class='metric'>Docker</span><span class='metric'>CI/CD Pipeline</span><span class='metric'>Auto-Scaling</span></div><br/>Built and deployed enterprise-grade web application on AWS cloud infrastructure with complete DevOps automation. Architected scalable backend using Node.js and FastAPI with load balancing and auto-scaling capabilities. Created Docker containers for consistent deployment across development, staging, and production environments. Implemented comprehensive CI/CD pipeline using GitHub Actions automating testing, building, and deployment processes. Deployed frontend to AWS S3 with CloudFront CDN for global content delivery and improved performance. Configured backend on AWS EC2 instances with Elastic Load Balancer for high availability. Set up PostgreSQL database on AWS RDS with automated backups and multi-AZ deployment. Implemented monitoring and logging using AWS CloudWatch for real-time application health tracking. Added security best practices including HTTPS, IAM roles, security groups, and encrypted data storage. Results: 99.9% uptime, automated deployments reducing manual errors, scalable infrastructure handling traffic spikes efficiently.",
      "media": {
        "type": "image",
        "src": "images/bird-detection-system.svg",
        "poster": null
      },
      "techStack": [
        "React.js",
        "Node.js",
        "FastAPI",
        "AWS EC2",
        "AWS S3",
        "AWS RDS",
        "Docker",
        "GitHub Actions",
        "CI/CD",
        "PostgreSQL",
        "Nginx",
        "CloudFront"
      ],
      "metrics": [
        {"value": "99.9%", "label": "Uptime"},
        {"value": "Automated", "label": "CI/CD"},
        {"value": "Scalable", "label": "Architecture"}
      ],
      "links": {
        "website": null,
        "github": null,
        "details": "#"
      },
      "isExpandable": true
    },
    {
      "id": "vector-database-app",
      "title": "Vector Database Application",
      "year": "2025",
      "category": "genai",
      "shortDescription": "Semantic search application using vector embeddings, Pinecone/Weaviate, and LLM-powered query understanding.",
      "detailedDescription": "<div class='project-metrics'><span class='metric'>Vector Search</span><span class='metric'>Semantic Matching</span><span class='metric'>LLM Integration</span><span class='metric'>High Performance</span></div><br/>Developed advanced semantic search application leveraging vector databases for intelligent information retrieval. Implemented vector embedding pipeline using OpenAI and Hugging Face models converting text to high-dimensional vectors. Integrated Pinecone and Weaviate vector databases for efficient similarity search and retrieval. Created preprocessing pipeline handling document ingestion, chunking, and embedding generation at scale. Built FastAPI backend exposing REST endpoints for search queries and document management. Implemented hybrid search combining vector similarity with traditional keyword matching for improved accuracy. Added LLM-powered query understanding improving search intent recognition and relevance. Created React frontend with real-time search suggestions and result visualization. Optimized indexing and query performance through batching, caching, and efficient vector operations. Deployed with Docker and Kubernetes for horizontal scaling. Results: Sub-100ms query latency, high relevance scores, ability to handle millions of documents efficiently.",
      "media": {
        "type": "image",
        "src": "images/healthcare-ml-risk.svg",
        "poster": null
      },
      "techStack": [
        "Python",
        "FastAPI",
        "Pinecone",
        "Weaviate",
        "OpenAI Embeddings",
        "Hugging Face",
        "React.js",
        "Docker",
        "Kubernetes",
        "Vector Search",
        "Semantic Matching"
      ],
      "metrics": [
        {"value": "<100ms", "label": "Query Speed"},
        {"value": "High", "label": "Relevance"},
        {"value": "Millions", "label": "Documents"}
      ],
      "links": {
        "website": null,
        "github": null,
        "details": "#"
      },
      "isExpandable": true
    },
    {
      "id": "salesforce-crm-automation",
      "title": "Salesforce CRM Automation",
      "year": "2022",
      "category": "enterprise",
      "shortDescription": "Enterprise CRM solution with Lightning Web Components, Apex triggers, and third-party API integration.",
      "detailedDescription": "<div class='project-metrics'><span class='metric'>Lightning Web Components</span><span class='metric'>Apex Triggers</span><span class='metric'>API Integration</span><span class='metric'>Business Automation</span></div><br/>Developed comprehensive Salesforce CRM automation solution enhancing business processes and user productivity. Built modern Lightning Web Components (LWC) creating responsive, reusable UI components following best practices. Implemented complex Apex triggers enforcing business rules, data validation, and automated workflows. Wrote extensive Apex test classes achieving 95%+ code coverage ensuring production readiness. Created Salesforce Flows automating repetitive tasks including lead assignment, opportunity management, and notifications. Integrated third-party services via REST APIs enabling data synchronization and extended functionality. Implemented SOQL queries optimizing database access and improving application performance. Created validation rules ensuring data quality and preventing invalid data entry. Built custom reports and dashboards providing business insights and KPI tracking. Followed Salesforce development best practices including governor limits, bulkification, and security. Results: Automated manual processes saving significant time, improved data accuracy, enhanced user experience with modern UI components.",
      "media": {
        "type": "image",
        "src": "images/document-classification.svg",
        "poster": null
      },
      "techStack": [
        "Salesforce",
        "Lightning Web Components",
        "Apex",
        "SOQL",
        "SOSL",
        "Salesforce Flows",
        "REST APIs",
        "JavaScript",
        "Validation Rules",
        "Apex Testing"
      ],
      "metrics": [
        {"value": "95%+", "label": "Code Coverage"},
        {"value": "LWC", "label": "Modern UI"},
        {"value": "Automated", "label": "Workflows"}
      ],
      "links": {
        "website": null,
        "github": null,
        "details": "#"
      },
      "isExpandable": true
    },
    {
      "id": "realtime-supabase-app",
      "title": "Real-Time Database Application",
      "year": "2025",
      "category": "fullstack",
      "shortDescription": "Real-time collaborative app using Supabase, PostgreSQL, and React with live data synchronization.",
      "detailedDescription": "<div class='project-metrics'><span class='metric'>Real-Time Sync</span><span class='metric'>Supabase</span><span class='metric'>PostgreSQL</span><span class='metric'>Collaborative</span></div><br/>Built real-time collaborative application leveraging Supabase as Backend-as-a-Service for instant data synchronization. Designed normalized PostgreSQL database schema with relationships, indexes, and constraints for data integrity. Implemented Supabase real-time subscriptions enabling live updates across all connected clients without polling. Created authentication system using Supabase Auth with email/password, OAuth providers, and JWT tokens. Built React frontend with hooks managing real-time state updates and optimistic UI rendering. Implemented Row Level Security (RLS) policies in PostgreSQL ensuring users access only authorized data. Created RESTful API endpoints and PostgreSQL functions for complex business logic and data operations. Added file storage using Supabase Storage for user uploads with secure access policies. Implemented caching and optimization strategies reducing database queries and improving performance. Deployed frontend to Vercel with automatic preview deployments for pull requests. Results: Instant data synchronization, secure multi-tenant architecture, seamless collaborative features, positive user feedback on real-time experience.",
      "media": {
        "type": "image",
        "src": "images/behavioral-health-chatbot.svg",
        "poster": null
      },
      "techStack": [
        "React.js",
        "Supabase",
        "PostgreSQL",
        "JavaScript",
        "Real-Time Subscriptions",
        "Row Level Security",
        "Supabase Auth",
        "Vercel",
        "REST APIs",
        "File Storage"
      ],
      "metrics": [
        {"value": "Real-Time", "label": "Sync"},
        {"value": "Secure", "label": "Multi-Tenant"},
        {"value": "Fast", "label": "Performance"}
      ],
      "links": {
        "website": null,
        "github": null,
        "details": "#"
      },
      "isExpandable": true
    },
    {
      "id": "prompt-engineering-tool",
      "title": "Prompt Engineering Playground",
      "year": "2025",
      "category": "genai",
      "shortDescription": "Interactive tool for testing and optimizing LLM prompts with multiple AI providers and parameter tuning.",
      "detailedDescription": "<div class='project-metrics'><span class='metric'>Multi-Provider</span><span class='metric'>Prompt Testing</span><span class='metric'>Parameter Tuning</span><span class='metric'>Comparison Tool</span></div><br/>Created comprehensive prompt engineering tool for testing, comparing, and optimizing prompts across multiple LLM providers. Integrated OpenAI, Claude, Gemini, and Ollama APIs enabling side-by-side comparison of responses. Built intuitive React interface with Monaco Editor for syntax-highlighted prompt editing and templates. Implemented parameter controls for temperature, max tokens, top-p, frequency penalty, and presence penalty. Created prompt template library with examples for few-shot learning, chain-of-thought reasoning, and role-playing. Added prompt versioning system storing history and enabling A/B testing of different variations. Implemented cost calculator tracking token usage and API costs across different providers. Created export functionality generating code snippets in Python, JavaScript, and cURL formats. Built analytics dashboard showing response times, token counts, and quality metrics. Integrated with FastAPI backend handling API key management and rate limiting. Results: Accelerated prompt development workflow, improved prompt quality through systematic testing, cost optimization through provider comparison.",
      "media": {
        "type": "image",
        "src": "images/custom-gpt-transcripts.svg",
        "poster": null
      },
      "techStack": [
        "React.js",
        "TypeScript",
        "FastAPI",
        "OpenAI",
        "Claude",
        "Gemini",
        "Ollama",
        "Monaco Editor",
        "Tailwind CSS",
        "REST APIs",
        "Prompt Engineering"
      ],
      "metrics": [
        {"value": "4+", "label": "LLM Providers"},
        {"value": "Interactive", "label": "Testing"},
        {"value": "Cost", "label": "Optimizer"}
      ],
      "links": {
        "website": null,
        "github": null,
        "details": "#"
      },
      "isExpandable": true
    }
  ],

  "certifications": [],

  "education": [
    {
      "degree": "Master of Science in Information Technology",
      "institution": "Northern Arizona University",
      "location": "Flagstaff, AZ",
      "year": "Jan 2024 – May 2025",
      "gpa": "GPA: 3.64/4.0",
      "logo": "images/northern-arizona-university-logo.png"
    }
  ],

  "siteConfig": {
    "siteTitle": "Mustaq Sohail Shaik - Full Stack Developer & AI Engineer",
    "favicon": null,
    "themeColors": {
      "primaryRed": "#0ea5e9",
      "lightRed": "#38bdf8",
      "darkRed": "#0284c7",
      "textDark": "#1e293b",
      "textLight": "#64748b",
      "bgLight": "#f8fafc",
      "white": "#ffffff"
    },
    "domain": null,
    "googleAnalytics": null
  }
}
